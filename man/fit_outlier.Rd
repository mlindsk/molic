% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_fit_outlier.R
\name{fit_outlier}
\alias{fit_outlier}
\title{Fit Outlier}
\usage{
fit_outlier(
  A,
  z,
  adj,
  alpha = 0.05,
  nsim = 10000,
  ncores = 1,
  trace = FALSE,
  validate = TRUE
)
}
\arguments{
\item{A}{Character Matrix (data) - without the new observation \code{z} appended}

\item{z}{Named vector (same names as \code{colnames(A)})}

\item{adj}{Adjacency list or gengraph object of a decomposable graph
without the observation of interest. See details}

\item{alpha}{The significance level}

\item{nsim}{Number of simulations}

\item{ncores}{Number of cores to use in parallelization}

\item{trace}{Logical indicating whether or not to trace the procedure}

\item{validate}{Logical. If true, it checks if \code{A} has only single character values and converts it if not.}
}
\description{
A convenient wrapper for doing outlier test
}
\details{
Notice, that \code{z} must not be included in \code{A}! Hence, if the purpose
is to find outliers within a dataset, one should use \code{outlier_model} once, and then
call the \code{outliers} function.

The \code{adj} object is most typically found using \code{fit_graph}. But the user can supply
an adjacency list, just a named \code{list}, of their own choice if needed.
}
\examples{
\dontrun{
library(dplyr)

# All handwritten digits that have true class equal to a "1".
d <- digits \%>\%
  filter(class == "1") \%>\%
  select(-class) \%>\%
  as_tibble()

# -----------------------------------------------------------
#                        EXAMPLE 1
#         Testing if a new observation is an outlier
# -----------------------------------------------------------

# A handwritten digit with true class equal to "7"
z <- digits \%>\%
  filter(class == "7") \%>\%
  select(-class) \%>\%
  slice(1) \%>\%
  unlist()

# Fitting the interaction graph
g <- fit_graph(d, trace = FALSE)

# Test if z is an outlier in class "1"
m1 <- fit_outlier(as.matrix(d), z, g)
print(m1)
plot(m1)

# -----------------------------------------------------------
#                        EXAMPLE 2
#    Testing which observations within d are outliers
# -----------------------------------------------------------

m2 <- outlier_model(as.matrix(d), g)
outs <- outliers(m2, d)
d[which(outs), ] # 29 outliers (out of 571 observatiobs is 5\% as expected)

}
}
\seealso{
\code{\link{outlier_model}}, \code{\link{fit_graph}}
}
